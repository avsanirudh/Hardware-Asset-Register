/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import static java.lang.Thread.sleep;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.regex.*;
import org.apache.commons.validator.routines.EmailValidator;
import com.email.durgesh.Email;
import java.awt.HeadlessException;
import java.io.UnsupportedEncodingException;
import javax.mail.MessagingException;

/**
 *
 * @author Anirudh
 */
public class Register extends DesignHome {

    Connection con;
    PreparedStatement pstmt;
    Statement stmt;
    ResultSet rs;
    
    public boolean b; 
    int OTP = (int)(Math.random()*1000000);
    
    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        System.out.println("OTP = " + OTP);
        clock();
    }

    public void clock()
    {
        Thread clock;
        clock = new Thread()
        {
            @Override
            public void run()
            {
                try 
                {
                    for(;;)
                    {
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                        java.util.Date date = new java.util.Date();
                        ClockLbl.setText(sdf.format(date)); 
                        sleep(1000);
                    }
                }
                catch (InterruptedException ex) 
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        
        };
        clock.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        RegisterBtn = new javax.swing.JButton();
        ResultLbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        UserNameTxt = new javax.swing.JTextField();
        RePassTxt = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        SignInBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        EmailTxt = new javax.swing.JTextField();
        PassTxt2 = new javax.swing.JPasswordField();
        ClockLbl = new javax.swing.JLabel();
        SendOtpBtn = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        OtpTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        HeadingLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EmpIDTxt = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        UserNameTxt1 = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 600));
        jPanel1.setLayout(null);

        RegisterBtn.setBackground(new java.awt.Color(0, 102, 204));
        RegisterBtn.setForeground(new java.awt.Color(255, 255, 255));
        RegisterBtn.setText("Verify and Register");
        RegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterBtnActionPerformed(evt);
            }
        });
        jPanel1.add(RegisterBtn);
        RegisterBtn.setBounds(160, 640, 278, 42);

        ResultLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ResultLbl.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ResultLbl);
        ResultLbl.setBounds(184, 587, 0, 0);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter a password :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(160, 220, 140, 17);

        UserNameTxt.setBackground(new java.awt.Color(51, 51, 51));
        UserNameTxt.setForeground(new java.awt.Color(255, 255, 255));
        UserNameTxt.setBorder(null);
        UserNameTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        UserNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTxtActionPerformed(evt);
            }
        });
        jPanel1.add(UserNameTxt);
        UserNameTxt.setBounds(160, 170, 280, 27);

        RePassTxt.setBackground(new java.awt.Color(51, 51, 51));
        RePassTxt.setForeground(new java.awt.Color(255, 255, 255));
        RePassTxt.setBorder(null);
        RePassTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(RePassTxt);
        RePassTxt.setBounds(160, 340, 280, 27);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Enter your Email ID:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(160, 390, 160, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter your UserName :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(160, 140, 170, 17);

        SignInBtn.setBackground(new java.awt.Color(0, 102, 255));
        SignInBtn.setForeground(new java.awt.Color(255, 255, 255));
        SignInBtn.setText("Sign-In");
        SignInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignInBtnActionPerformed(evt);
            }
        });
        jPanel1.add(SignInBtn);
        SignInBtn.setBounds(450, 640, 100, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Re-enter your password :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(160, 310, 190, 17);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/show_password_32px.png"))); // NOI18N
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton3MouseReleased(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(450, 240, 32, 27);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/show_password_32px.png"))); // NOI18N
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton5MouseReleased(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(450, 330, 32, 27);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(160, 450, 280, 3);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(160, 200, 280, 3);

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator3);
        jSeparator3.setBounds(160, 280, 280, 3);

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator4);
        jSeparator4.setBounds(160, 370, 278, 3);

        EmailTxt.setBackground(new java.awt.Color(51, 51, 51));
        EmailTxt.setForeground(new java.awt.Color(255, 255, 255));
        EmailTxt.setBorder(null);
        EmailTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(EmailTxt);
        EmailTxt.setBounds(160, 420, 280, 27);

        PassTxt2.setBackground(new java.awt.Color(51, 51, 51));
        PassTxt2.setForeground(new java.awt.Color(255, 255, 255));
        PassTxt2.setBorder(null);
        PassTxt2.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(PassTxt2);
        PassTxt2.setBounds(160, 250, 280, 27);

        ClockLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClockLbl.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(ClockLbl);
        ClockLbl.setBounds(400, 20, 160, 20);

        SendOtpBtn.setBackground(new java.awt.Color(0, 102, 204));
        SendOtpBtn.setForeground(new java.awt.Color(255, 255, 255));
        SendOtpBtn.setText("Send OTP");
        SendOtpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendOtpBtnActionPerformed(evt);
            }
        });
        jPanel1.add(SendOtpBtn);
        SendOtpBtn.setBounds(450, 410, 100, 35);

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator5);
        jSeparator5.setBounds(160, 610, 280, 3);

        OtpTxt.setBackground(new java.awt.Color(51, 51, 51));
        OtpTxt.setForeground(new java.awt.Color(255, 255, 255));
        OtpTxt.setBorder(null);
        OtpTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(OtpTxt);
        OtpTxt.setBounds(160, 580, 280, 27);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Enter Your OTP:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(160, 550, 130, 17);

        HeadingLbl.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        HeadingLbl.setForeground(new java.awt.Color(255, 255, 255));
        HeadingLbl.setText("Sign Up");
        jPanel1.add(HeadingLbl);
        HeadingLbl.setBounds(50, 20, 100, 40);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Enter your Employee ID:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(160, 470, 180, 17);

        EmpIDTxt.setBackground(new java.awt.Color(51, 51, 51));
        EmpIDTxt.setForeground(new java.awt.Color(255, 255, 255));
        EmpIDTxt.setBorder(null);
        EmpIDTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(EmpIDTxt);
        EmpIDTxt.setBounds(160, 500, 280, 27);

        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator6);
        jSeparator6.setBounds(160, 530, 280, 3);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Enter your Name :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(160, 60, 170, 17);

        UserNameTxt1.setBackground(new java.awt.Color(51, 51, 51));
        UserNameTxt1.setForeground(new java.awt.Color(255, 255, 255));
        UserNameTxt1.setBorder(null);
        UserNameTxt1.setCaretColor(new java.awt.Color(255, 255, 255));
        UserNameTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTxt1ActionPerformed(evt);
            }
        });
        jPanel1.add(UserNameTxt1);
        UserNameTxt1.setBounds(160, 90, 280, 27);

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator7);
        jSeparator7.setBounds(160, 120, 280, 3);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/question_mark_32px.png"))); // NOI18N
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton6MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton6MouseReleased(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(450, 570, 32, 27);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(530, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void createuser()
    {
        String name = UserNameTxt1.getText();
        String password = new String(RePassTxt.getPassword());
        String uname = UserNameTxt.getText();
        String repassword = new String(RePassTxt.getPassword());
        String EncryptedPassword;
        String email = EmailTxt.getText();
        String empid = EmpIDTxt.getText();

        if(name.equals("") || password.equals("") || repassword.equals("") || email.equals("") || OtpTxt.getText().equals("") || empid.equals(""))
            JOptionPane.showMessageDialog(null, "None Of The Fields Can Be Empty");

        else
        {

                if(password.length()>=8)
                {
                    Pattern p = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
                    Pattern pempId = Pattern.compile("[^0-9]");
                    Pattern pname = Pattern.compile("[^a-z]", Pattern.CASE_INSENSITIVE);
                    
                    Matcher Mname = pname.matcher(name);
                    Matcher Muname = p.matcher(uname);
                    Matcher MempID = pempId.matcher(empid);
                    
                    boolean BempId = MempID.find();
                    boolean Bname = Mname.find();
                    boolean Buname = Muname.find();

                    if(Bname)
                        JOptionPane.showMessageDialog(null, "Name can't contain special characters or numbers");
                    
                    else if(Buname) 
                            JOptionPane.showMessageDialog(null, "Username can't contain special characters");
                    
                    else if(BempId)
                        JOptionPane.showMessageDialog(null, "Employee ID can contain only numbers");

                    else
                    {                        
                        if(emailValidator(email))
                        {
                        System.out.println("OTP generated = " + OTP);
                        int uotp = Integer.parseInt(OtpTxt.getText()); 
                        System.out.println("OTP entered = " + uotp);
                        
                        if(password.equals(repassword))
                        {
                            if(uotp==OTP)
                            {
                            EncryptedPassword = getMD5(password);
                            try
                                {
                                    System.out.println("Establishing Connection");
                                    con = new DesignHome().dbconn();
                                    con.setAutoCommit(false);
                                    System.out.println("Connection Established");

                                    String query = "INSERT into USERS(Password, Username, Email, EmployeeID, Name) values(?, ?, ?, ?, ?)";
                                    pstmt = con.prepareStatement(query);
                                    
                                    pstmt.setString(1, EncryptedPassword);
                                    pstmt.setString(2, uname);
                                    pstmt.setString(3, email);
                                    pstmt.setString(4, empid);
                                    pstmt.setString(5, name);
                                    
                                     try
                                        {
                                            System.out.println("executing statement "+pstmt.executeUpdate());
                                            con.commit();
                                            JOptionPane.showMessageDialog(null,"User created successfully! Contact "
                                                    + "your Administrator to get your user approved.");
                                            new Login().setVisible(true);
                                            this.dispose();
                                        }
                                    catch (SQLException sqlx)
                                        {                                            
                                            JOptionPane.showMessageDialog(null , sqlx.getMessage());
                                        }

                                    System.out.println("Pstmt Executed");   

                                    try 
                                        {
                                            pstmt.close();
                                            con.close();
                                        }
                                    catch(SQLException e)
                                        {
                                            JOptionPane.showMessageDialog(null, e.getMessage());
                                        }                                        
                                    }
                                catch(SQLException sqle)
                                {
                                JOptionPane.showMessageDialog(null, sqle.getMessage());
                                }
                            }
                            else
                                JOptionPane.showMessageDialog(null, "Invalid OTP");
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Both passwords do not match");
                        }
                        
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Entered Email ID is not valid");
                        }
                    }
                }
                else
                    JOptionPane.showMessageDialog(null,  "Password must contain at least 8 characters.");
            }
        }
    
    public boolean emailValidator(String email)
    {
        EmailValidator validator = EmailValidator.getInstance();
        return validator.isValid(email);
    }
    

    
    public void sendmail(String recipient, int otp)
    {
        String myemail = "auth.hardwareassetregister@gmail.com";
        String password = "Auth.Hardware";
        
        try
        {
            Email email= new Email(myemail, password);
            email.setFrom(myemail, "Hardware Asset Register");
            email.setSubject("Hardware Asset Register Authentication");
            email.setContent("<h1>Your OTP for registration is " + otp + "</h1>", "text/html");
            
            email.addRecipient(recipient);
            email.send();
            JOptionPane.showMessageDialog(null, "An OTP has been sent to " + recipient +
                    ". Please check your E-Mail and enter the OTP in the text field given below.");
        } 
        catch (HeadlessException | UnsupportedEncodingException | MessagingException ex) 
        {
            JOptionPane.showMessageDialog(null, "Error Sending E-Mail. " + ex.getMessage() + ". Please Try Again.");
        }
    }
    
    
    
    
    private void RegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterBtnActionPerformed
        createuser();
    }//GEN-LAST:event_RegisterBtnActionPerformed

    private void SignInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignInBtnActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SignInBtnActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void UserNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTxtActionPerformed

    private void SendOtpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendOtpBtnActionPerformed

        String email = EmailTxt.getText();
        String query = "Select username from users where email = '" + email + "'";
        try
        {
        con = new DesignHome().dbconn();
        stmt = con.createStatement();
        rs = stmt.executeQuery(query);
        if(rs.next())
            JOptionPane.showMessageDialog(null, "The Email ID Entered Is Already Signed Up With A Different Account.");
        else if(EmailTxt.getText().equals(""))
            JOptionPane.showMessageDialog(null, "Please Enter Your Email Address");
        else if(!emailValidator(EmailTxt.getText()))
            JOptionPane.showMessageDialog(null, "The Email ID Entered Is Invalid.");
        else
            sendmail(email, OTP);
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }        
    }//GEN-LAST:event_SendOtpBtnActionPerformed

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        // TODO add your handling code here:
        PassTxt2.setEchoChar((char)0);
    }//GEN-LAST:event_jButton3MousePressed

    private void jButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseReleased
        // TODO add your handling code here:
        PassTxt2.setEchoChar('*');
    }//GEN-LAST:event_jButton3MouseReleased

    private void jButton5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MousePressed
        // TODO add your handling code here:
        RePassTxt.setEchoChar((char)0);
    }//GEN-LAST:event_jButton5MousePressed

    private void jButton5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseReleased
        // TODO add your handling code here:
        RePassTxt.setEchoChar('*');
    }//GEN-LAST:event_jButton5MouseReleased

    private void UserNameTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameTxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTxt1ActionPerformed

    private void jButton6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MousePressed

    private void jButton6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "When you click the send OTP button next to the email address field, an OTP will be sent to your email. Please check your email and enter the OTP in this field");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public static String getMD5(String input) 
    { 
        try { 
  
            // Static getInstance method is called with hashing MD5 
            MessageDigest md = MessageDigest.getInstance("MD5"); 
  
            // digest() method is called to calculate message digest 
            //  of an input digest() return array of byte 
            byte[] messageDigest = md.digest(input.getBytes()); 
  
            // Convert byte array into signum representation 
            BigInteger no = new BigInteger(1, messageDigest); 
  
            // Convert message digest into hex value 
            String hashtext = no.toString(16); 
            while (hashtext.length() < 32) { 
                hashtext = "0" + hashtext; 
            } 
            return hashtext; 
        }  
  
        // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) { 
            throw new RuntimeException(e); 
        } 
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ClockLbl;
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JTextField EmpIDTxt;
    private javax.swing.JLabel HeadingLbl;
    private javax.swing.JTextField OtpTxt;
    private javax.swing.JPasswordField PassTxt2;
    private javax.swing.JPasswordField RePassTxt;
    private javax.swing.JButton RegisterBtn;
    private javax.swing.JLabel ResultLbl;
    private javax.swing.JButton SendOtpBtn;
    private javax.swing.JButton SignInBtn;
    private javax.swing.JTextField UserNameTxt;
    private javax.swing.JTextField UserNameTxt1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    // End of variables declaration//GEN-END:variables
}
