/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Anirudh
 */
public class ActivityLog extends javax.swing.JFrame
{
    Connection con;
    Statement stmt;
    Statement stmt1;
    PreparedStatement pstmt;
    Statement stmt2;
    ResultSet rs;

    
    /**
     * Creates new form LoginLogout
     */
    public ActivityLog() {
        initComponents();
        ViewTable();
        cellfiller();
    }
    
    public void ViewTable()
    {
        try
        {
            con = new DesignHome().dbconn();
            String query = "SELECT UserId,(select username from users where id = UserId) Username, Login, Logout FROM ActivityLog ORDER BY Sno desc";
            
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            
            t1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public void cellfiller()
    {
        int rows = t1.getRowCount();
        int col = t1.getColumnCount();
        System.out.println("Rows = " + rows + " Columns = " + col);
        String val = "";
        for(int i = 0; i<rows; i++)
        {            
            for(int j = 0; j<col; j++)
            {
                try
                {
                    val = t1.getValueAt(i, j).toString();             
                }
                catch(NullPointerException e)
                {
                    t1.setValueAt("N/A", i, j);
                }
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainCard = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        SearchUsersBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JTable();
        AdminMainMenuBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        UserDetTxt = new javax.swing.JTextField();
        ClockLbl = new javax.swing.JLabel();
        ClockLbl1 = new javax.swing.JLabel();
        ExportDetBtn = new javax.swing.JButton();
        HeadingLbl = new javax.swing.JLabel();
        LogOutBtn = new javax.swing.JButton();
        MainMenuBtn = new javax.swing.JButton();
        RefreshBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(940, 683));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        MainCard.setBackground(new java.awt.Color(51, 51, 51));
        MainCard.setForeground(new java.awt.Color(51, 51, 51));
        MainCard.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter UserName or UserID To Search");
        MainCard.add(jLabel2);
        jLabel2.setBounds(10, 560, 260, 20);

        SearchUsersBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchUsersBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search_32px.png"))); // NOI18N
        SearchUsersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchUsersBtnActionPerformed(evt);
            }
        });
        MainCard.add(SearchUsersBtn);
        SearchUsersBtn.setBounds(260, 590, 40, 40);

        t1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        t1.setColumnSelectionAllowed(true);
        t1.getTableHeader().setReorderingAllowed(false);
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t1);
        t1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        MainCard.add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 900, 450);

        AdminMainMenuBtn.setBackground(new java.awt.Color(0, 102, 204));
        AdminMainMenuBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminMainMenuBtn.setText("Admin Main Menu");
        AdminMainMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminMainMenuBtnActionPerformed(evt);
            }
        });
        MainCard.add(AdminMainMenuBtn);
        AdminMainMenuBtn.setBounds(740, 560, 150, 40);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(jSeparator2);
        jSeparator2.setBounds(20, 630, 230, 3);

        UserDetTxt.setBackground(new java.awt.Color(51, 51, 51));
        UserDetTxt.setForeground(new java.awt.Color(255, 255, 255));
        UserDetTxt.setBorder(null);
        UserDetTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        MainCard.add(UserDetTxt);
        UserDetTxt.setBounds(20, 600, 230, 27);

        ClockLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClockLbl.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(ClockLbl);
        ClockLbl.setBounds(0, 0, 0, 0);

        ClockLbl1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClockLbl1.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(ClockLbl1);
        ClockLbl1.setBounds(340, 10, 160, 20);

        ExportDetBtn.setBackground(new java.awt.Color(0, 102, 204));
        ExportDetBtn.setForeground(new java.awt.Color(255, 255, 255));
        ExportDetBtn.setText("Export Details");
        ExportDetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportDetBtnActionPerformed(evt);
            }
        });
        MainCard.add(ExportDetBtn);
        ExportDetBtn.setBounds(510, 550, 130, 40);

        HeadingLbl.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        HeadingLbl.setForeground(new java.awt.Color(255, 255, 255));
        HeadingLbl.setText("View And Search Users");
        MainCard.add(HeadingLbl);
        HeadingLbl.setBounds(20, 10, 280, 32);

        LogOutBtn.setBackground(new java.awt.Color(0, 102, 204));
        LogOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogOutBtn.setText("Log Out");
        LogOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBtnActionPerformed(evt);
            }
        });
        MainCard.add(LogOutBtn);
        LogOutBtn.setBounds(820, 610, 100, 40);

        MainMenuBtn.setBackground(new java.awt.Color(0, 102, 204));
        MainMenuBtn.setForeground(new java.awt.Color(255, 255, 255));
        MainMenuBtn.setText("Main Menu");
        MainMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuBtnActionPerformed(evt);
            }
        });
        MainCard.add(MainMenuBtn);
        MainMenuBtn.setBounds(710, 610, 100, 40);

        RefreshBtn.setBackground(new java.awt.Color(0, 102, 204));
        RefreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        RefreshBtn.setText("Refresh");
        RefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshBtnActionPerformed(evt);
            }
        });
        MainCard.add(RefreshBtn);
        RefreshBtn.setBounds(350, 550, 130, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(MainCard, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainCard, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void export(int rows, String path) throws FileNotFoundException, DocumentException
    {
        Document document = new Document(PageSize.A4.rotate(),0,0,0,0);
        
        PdfWriter.getInstance(document, new FileOutputStream(path + "\\ActivityLog.pdf"));
        document.open();
        
        PdfPTable table = new PdfPTable(4);
        
        PdfPCell c1 = new PdfPCell(new Phrase("User ID"));
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Username"));
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Login Time"));
        table.addCell(c1);
        
        c1 = new PdfPCell(new Phrase("Logout Time"));
        table.addCell(c1);
                
        table.setHeaderRows(1);
        
        for(int i = 0; i < rows; i++)
        {
            for(int j = 0; j<4; j++)
            {
                table.addCell(t1.getValueAt(i, j).toString());
            }
        }
        document.add(table);
        
        document.close();
        
        JOptionPane.showMessageDialog(null, "Data Exported Successfully. File location: " + path + "\\ActivityLog.pdf");
    }
    
    public void logout()
    {
        try
        {
            String uid = "";
            con = new DesignHome().dbconn();
            String que = "Select userid, sno from ActivityLog order by Sno desc limit 1";
            stmt = con.createStatement();
            rs = stmt.executeQuery(que);
            int sno = 0;
            while(rs.next())
            {
                uid = rs.getString(1);
                sno = rs.getInt(2);
            }

            System.out.println("UserID = " + uid);
            
            String query = "update ActivityLog set logout = ? where sno = '" + sno + "';";
            pstmt = con.prepareStatement(query);

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            java.util.Date date = new java.util.Date();
            sdf.format(date);
            String datetime = date.toString();

            pstmt.setString(1, datetime);
            pstmt.executeUpdate();
            
            stmt.close();
            pstmt.close();
            rs.close();
            con.close();
            
            new Home().setVisible(true);
            this.dispose();
        }
    
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
        
    
    public void search(String[][] arr)
    {
        int rows = arr.length;
        int count = 0;        
        
        String x = UserDetTxt.getText();
        System.out.println("x = " + x);   
        
        DefaultTableModel model = (DefaultTableModel)t1.getModel();
        model.setRowCount(0);       
        
        for(int j = 0; j<rows; j++)
        {
            if(arr[j][0].equals(x) || arr[j][1].contains(x.toLowerCase()) || arr[j][1].contains(x.toUpperCase()))
            {                   
                model.addRow(arr[j]);    
                count++;
            }
        }      
        if(count == 0)
            JOptionPane.showMessageDialog(null, "No Such User Found");
    }
    
        public String[][] ConvertToArray()
    {               
        
        int r = t1.getRowCount();
        String[][] table = new String[r][4];
        
        for(int rows = 0; rows<r; rows++)
        {
            for(int col = 0; col<4; col++)
            {
                try
                {
                    table[rows][col] = t1.getValueAt(rows,col).toString();                    
                }
                catch(NullPointerException e)
                {
                    table[rows][col] = "N/A";
                }
            }
        }
        System.out.println("Table intitial" + Arrays.deepToString(table));
        return table;
    }
    
    private void SearchUsersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchUsersBtnActionPerformed
        // TODO add your handling code here:
        if(UserDetTxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Enter User Name or User ID");
        }
        else
        {
            ViewTable();
            String[][] arr = ConvertToArray();
            search(arr);
        }
    }//GEN-LAST:event_SearchUsersBtnActionPerformed

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked
        // TODO add your handling code here:
//        DeleteUserBtn.setVisible(true);
  //      EditBtn.setVisible(true);
    }//GEN-LAST:event_t1MouseClicked

    private void AdminMainMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminMainMenuBtnActionPerformed
        // TODO add your handling code here:
        new AdminMainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AdminMainMenuBtnActionPerformed

    private void ExportDetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportDetBtnActionPerformed

        File dir = null;
        String path = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) 
        {
          dir = chooser.getSelectedFile();
          path = dir.getAbsolutePath();   
          int r = t1.getRowCount();
        
        try 
        {
            export(r, path);
        }
        catch (FileNotFoundException ex) 
        {
            Logger.getLogger(SearchAssets.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (DocumentException ex) 
        {
            Logger.getLogger(SearchAssets.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else 
        {
          JOptionPane.showMessageDialog(null, "No Selection");
        }                        
    }//GEN-LAST:event_ExportDetBtnActionPerformed

    private void LogOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBtnActionPerformed
        logout();
    }//GEN-LAST:event_LogOutBtnActionPerformed

    private void MainMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuBtnActionPerformed
        // TODO add your handling code here:
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MainMenuBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        logout();
    }//GEN-LAST:event_formWindowClosing

    private void RefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshBtnActionPerformed
        // TODO add your handling code here:
        ViewTable();
    }//GEN-LAST:event_RefreshBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActivityLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActivityLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActivityLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActivityLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActivityLog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminMainMenuBtn;
    private javax.swing.JLabel ClockLbl;
    private javax.swing.JLabel ClockLbl1;
    private javax.swing.JButton ExportDetBtn;
    private javax.swing.JLabel HeadingLbl;
    private javax.swing.JButton LogOutBtn;
    private javax.swing.JPanel MainCard;
    private javax.swing.JButton MainMenuBtn;
    private javax.swing.JButton RefreshBtn;
    private javax.swing.JButton SearchUsersBtn;
    private javax.swing.JTextField UserDetTxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable t1;
    // End of variables declaration//GEN-END:variables
}
