/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Classes;
import java.awt.Color;
import static java.lang.Thread.sleep;
import javax.swing.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.regex.*;
/**
 *
 * @author Anirudh
 */
public class AddAsset extends DesignHome 
{
    /**
     * Creates new form Menu
     */
    public AddAsset() {
        initComponents();
        SetAssetID();
        
        clock();
    }
    
    private void SetAssetID()
    {
        String assetid = getassetid();
        AssetIDTxt.setText(assetid);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainCard = new javax.swing.JPanel();
        AssetIDLbl = new javax.swing.JLabel();
        InvoiceNumLbl = new javax.swing.JLabel();
        AssetTypeLbl = new javax.swing.JLabel();
        AssetTypeCB = new javax.swing.JComboBox<>();
        MakeLbl = new javax.swing.JLabel();
        SerialNumLbl = new javax.swing.JLabel();
        FloorLbl = new javax.swing.JLabel();
        AddAssetBtn = new javax.swing.JButton();
        AssetNameLbl = new javax.swing.JLabel();
        MakeCB = new javax.swing.JComboBox<>();
        AssetIDTxt = new javax.swing.JTextField();
        AssetNameTxt = new javax.swing.JTextField();
        InvoiceNumberTxt = new javax.swing.JTextField();
        SerialNumTxt = new javax.swing.JTextField();
        FloorTxt = new javax.swing.JTextField();
        AssetIDSep = new javax.swing.JSeparator();
        AssetNameSep = new javax.swing.JSeparator();
        InvoiceNumSep = new javax.swing.JSeparator();
        SerialNumSep = new javax.swing.JSeparator();
        FloorSep = new javax.swing.JSeparator();
        ClearBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        LogOutBtn = new javax.swing.JButton();
        ClockLbl = new javax.swing.JLabel();
        HeadingLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1130, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        MainCard.setBackground(new java.awt.Color(51, 51, 51));
        MainCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AssetIDLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        AssetIDLbl.setForeground(new java.awt.Color(255, 255, 255));
        AssetIDLbl.setText("Asset ID:");
        MainCard.add(AssetIDLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        InvoiceNumLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        InvoiceNumLbl.setForeground(new java.awt.Color(255, 255, 255));
        InvoiceNumLbl.setText("Invoice Number :");
        MainCard.add(InvoiceNumLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        AssetTypeLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        AssetTypeLbl.setForeground(new java.awt.Color(255, 255, 255));
        AssetTypeLbl.setText("Asset Type:");
        MainCard.add(AssetTypeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, -1, -1));

        AssetTypeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptop", "PC", "Server", "Printer", "Router", "Hard Drive" }));
        MainCard.add(AssetTypeCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, -1, 30));

        MakeLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        MakeLbl.setForeground(new java.awt.Color(255, 255, 255));
        MakeLbl.setText("Make:");
        MainCard.add(MakeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));

        SerialNumLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        SerialNumLbl.setForeground(new java.awt.Color(255, 255, 255));
        SerialNumLbl.setText("Serial Number:");
        MainCard.add(SerialNumLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));

        FloorLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        FloorLbl.setForeground(new java.awt.Color(255, 255, 255));
        FloorLbl.setText("Floor:");
        MainCard.add(FloorLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, -1, -1));

        AddAssetBtn.setBackground(new java.awt.Color(0, 102, 204));
        AddAssetBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddAssetBtn.setText("Add Asset");
        AddAssetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAssetBtnActionPerformed(evt);
            }
        });
        MainCard.add(AddAssetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 570, 276, 40));

        AssetNameLbl.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        AssetNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        AssetNameLbl.setText("Asset Name:");
        MainCard.add(AssetNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, -1, -1));

        MakeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dell", "HP", "Lenovo", "IBM", "Acer", "Huawei", "Indosat", "Telkomsel", "Seagate", "Samsung", "Western Digital", " " }));
        MakeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeCBActionPerformed(evt);
            }
        });
        MainCard.add(MakeCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, 100, 30));

        AssetIDTxt.setEditable(false);
        AssetIDTxt.setBackground(new java.awt.Color(51, 51, 51));
        AssetIDTxt.setForeground(new java.awt.Color(255, 255, 255));
        AssetIDTxt.setBorder(null);
        AssetIDTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        AssetIDTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AssetIDTxtMouseClicked(evt);
            }
        });
        MainCard.add(AssetIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 276, 27));

        AssetNameTxt.setBackground(new java.awt.Color(51, 51, 51));
        AssetNameTxt.setForeground(new java.awt.Color(255, 255, 255));
        AssetNameTxt.setBorder(null);
        AssetNameTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        MainCard.add(AssetNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 276, 27));

        InvoiceNumberTxt.setBackground(new java.awt.Color(51, 51, 51));
        InvoiceNumberTxt.setForeground(new java.awt.Color(255, 255, 255));
        InvoiceNumberTxt.setBorder(null);
        InvoiceNumberTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        MainCard.add(InvoiceNumberTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 276, 27));

        SerialNumTxt.setBackground(new java.awt.Color(51, 51, 51));
        SerialNumTxt.setForeground(new java.awt.Color(255, 255, 255));
        SerialNumTxt.setBorder(null);
        SerialNumTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        MainCard.add(SerialNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 276, 27));

        FloorTxt.setBackground(new java.awt.Color(51, 51, 51));
        FloorTxt.setForeground(new java.awt.Color(255, 255, 255));
        FloorTxt.setBorder(null);
        FloorTxt.setCaretColor(new java.awt.Color(255, 255, 255));
        FloorTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FloorTxtActionPerformed(evt);
            }
        });
        MainCard.add(FloorTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 520, 276, 27));

        AssetIDSep.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(AssetIDSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 276, -1));

        AssetNameSep.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(AssetNameSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 276, -1));

        InvoiceNumSep.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(InvoiceNumSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 276, -1));

        SerialNumSep.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(SerialNumSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, 276, -1));

        FloorSep.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(FloorSep, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, 276, -1));

        ClearBtn.setBackground(new java.awt.Color(0, 102, 204));
        ClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        MainCard.add(ClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 630, 90, 42));

        BackBtn.setBackground(new java.awt.Color(0, 102, 204));
        BackBtn.setForeground(new java.awt.Color(255, 255, 255));
        BackBtn.setText("Main Menu");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        MainCard.add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 630, -1, 42));

        LogOutBtn.setBackground(new java.awt.Color(0, 102, 204));
        LogOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogOutBtn.setText("Log Out");
        LogOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBtnActionPerformed(evt);
            }
        });
        MainCard.add(LogOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 630, -1, 42));

        ClockLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClockLbl.setForeground(new java.awt.Color(255, 255, 255));
        MainCard.add(ClockLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 160, 20));

        HeadingLbl.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        HeadingLbl.setForeground(new java.awt.Color(255, 255, 255));
        HeadingLbl.setText("Add Asset");
        MainCard.add(HeadingLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(530, 530, 530)
                .addComponent(MainCard, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainCard, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LogOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBtnActionPerformed
        logout();
    }//GEN-LAST:event_LogOutBtnActionPerformed

    public void logout()
    {
        try
        {
        String uid = "";
            con = new DesignHome().dbconn();
            String que = "SELECT userid, sno FROM ActivityLog ORDER BY Sno desc limit 1";
            stmt = con.createStatement();
            rs = stmt.executeQuery(que);
            int sno = 0;
            while(rs.next())
            {
                uid = rs.getString(1);
                sno = rs.getInt(2);
            }

            System.out.println("UserID = " + uid);
            
            String query = "UPDATE ActivityLog SET logout = ? WHERE sno = '" + sno + "';";
            pstmt = con.prepareStatement(query);

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            java.util.Date date = new java.util.Date();
            sdf.format(date);
            String datetime = date.toString();

            pstmt.setString(1, datetime);
            pstmt.executeUpdate();
            
            stmt.close();
            pstmt.close();
            rs.close();
            con.close();
            
            new Home().setVisible(true);
            this.dispose();
        }
    
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public String getassetid()
    {
        int iid = 0;
        String assetid = "";
        try
        {
            System.out.println("Establishing Connection");
            con = new DesignHome().dbconn();
            con.setAutoCommit(false);
            System.out.println("Connection Established");
            
            String query = "SELECT assetid FROM assets ORDER BY assetid desc limit 1";
            stmt = con.createStatement();
            rs = stmt.executeQuery(query);
            if(rs.next())
            {
                iid = rs.getInt(1);    
            }            
            iid = iid + 1;
            assetid = Integer.toString(iid);
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        System.out.println("Assetid = " + assetid);
        return assetid;
    }  
    
    public void createasset()
    {
        String assetid = AssetIDTxt.getText();
        String assetname = AssetNameTxt.getText();
        String invoicenum = InvoiceNumberTxt.getText();
        String assettype = AssetTypeCB.getItemAt(AssetTypeCB.getSelectedIndex());
        String make = MakeCB.getItemAt(MakeCB.getSelectedIndex());
        String serialnumber = SerialNumTxt.getText();
        String floor = FloorTxt.getText();        
        String AssetTypeCode = Integer.toString(AssetTypeCB.getSelectedIndex() + 1);
        String MakeCode = Integer.toString(MakeCB.getSelectedIndex() + 7);
        
        String id = "";
                
        if(assetid.equals("") || assetname.equals("") || invoicenum.equals("") || assettype.equals("") || make.equals("") ||
                serialnumber.equals("") || floor.equals(""))
        {
            JOptionPane.showMessageDialog(null, "None Of The Fields Can Be Empty");
        }
        

        else
        {
            Pattern patt1 = Pattern.compile("[^a-z0-9&&['-'][$&+,:;=?@#|()]]", Pattern.CASE_INSENSITIVE);//for invoicenum, serialnum
            Pattern patt2 = Pattern.compile("[^a-z0-9' ']",Pattern.CASE_INSENSITIVE);//for assetname
            Pattern patt3 = Pattern.compile("[^0-9]");//for floor and assetid

            Matcher Minvoice = patt1.matcher(invoicenum);
            boolean Binvoice = Minvoice.find();

            Matcher Mserial = patt1.matcher(serialnumber);
            boolean Bserial = Mserial.find();

            Matcher Massetname = patt2.matcher(assetname);
            boolean Bassetname = Massetname.find();

            Matcher Mfloor = patt3.matcher(floor);
            boolean Bfloor = Mfloor.find();

            Matcher Massetid = patt3.matcher(assetid);
            boolean Bassetid = Massetid.find();
            
            if(Binvoice)
            {
                JOptionPane.showMessageDialog(null, "Invoice Number can not contain special characters except / and -");
            }
            else if(Bserial)
            {
                JOptionPane.showMessageDialog(null, "Serial number can not contain special characters except / and -");
            }
            else if(Bassetname)
            {
                JOptionPane.showMessageDialog(null, "Asset name can not contain anything else other than alphabets or numbers");
            }
            
            else if(Bfloor)
            {
                JOptionPane.showMessageDialog(null, "Please Enter A Valid Floor Number.");
            }
            else if(Bassetid)
            {
                JOptionPane.showMessageDialog(null, "Asset ID can contain only numbers");
            }
            else
                {
                try
                    {
                        System.out.println("Establishing Connection");
                        con = new DesignHome().dbconn();
                        con.setAutoCommit(false);
                        System.out.println("Connection Established");

                        try
                        {
                        String query = "INSERT into ASSETS(AssetID, AssetName, InvoiceNumber, AssetType, Make, SerialNumber, Floor, AddedBy, AddedOn) "
                                + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";
                        
                        System.out.println("Preparing Statement");
                        pstmt = con.prepareStatement(query);
                        
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                        java.util.Date date = new java.util.Date();
                        sdf.format(date);
                        String datetime = date.toString();
                        String time = datetime.substring(11,20);
                        
                        System.out.println("time = " + time);
                        
                        String que = "SELECT userid FROM ActivityLog ORDER BY sno desc limit 1";
                        stmt1 = con.createStatement();
                        rs = stmt1.executeQuery(que);
                        
                        if(rs.next())
                            id = rs.getString(1);
                        
                        System.out.println(query);
                        
                        pstmt.setString(1, assetid);
                        pstmt.setString(2, assetname);
                        pstmt.setString(3, invoicenum);
                        pstmt.setString(4, AssetTypeCode);
                        pstmt.setString(5, MakeCode);
                        pstmt.setString(6, serialnumber);
                        pstmt.setString(7, floor);
                        pstmt.setString(8, id);
                        pstmt.setString(9, datetime);

                        if(pstmt.executeUpdate()>0)
                        {
                            con.commit();
                            JOptionPane.showMessageDialog(null, "Asset Added Successfully!");
                            new AddAsset().setVisible(true);
                            this.dispose();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Could not add asset.");
                        }
                        
                    }
                    
                    catch(SQLException ex)
                    {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                    try
                    {
                        stmt1.close();
                        pstmt.close();
                        rs.close();
                        con.close();
                    }
                    catch(SQLException e)
                    {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            catch(SQLException sql)
                {
                    JOptionPane.showMessageDialog(null, sql.getMessage());
                }
           }
        }
    }
    
    public void clock()
    {
        Thread clock = new Thread()
        {
            @Override
            public void run()
            {
                try 
                {
                    for(;;)
                    {
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                        java.util.Date date = new java.util.Date();
                        ClockLbl.setText(sdf.format(date)); 
                        sleep(1000);
                    }
                }
                catch (InterruptedException ex) 
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        
        };
        clock.start();
    }
    
    private void AddAssetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAssetBtnActionPerformed
        // TODO add your handling code here:
        createasset();
    }//GEN-LAST:event_AddAssetBtnActionPerformed

    private void MakeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MakeCBActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to return to the main menu?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(response == JOptionPane.YES_OPTION)
        {
            new MainMenu().setVisible(true);
            this.dispose();
        }

        else if(response == JOptionPane.NO_OPTION)
        {
            this.setVisible(true);
        }
    }//GEN-LAST:event_BackBtnActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        String assetid = getassetid();
        AssetIDTxt.setText(assetid);
        AssetNameTxt.setText(null);
        InvoiceNumberTxt.setText(null);
        AssetTypeCB.setSelectedItem("Laptop");
        MakeCB.setSelectedItem("Dell");
        InvoiceNumberTxt.setText(null);
        SerialNumTxt.setText(null);
        FloorTxt.setText(null);
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void AssetIDTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AssetIDTxtMouseClicked
        // TODO add your handling code here:
        AssetIDLbl.setForeground(new Color(0,102,204));
        AssetIDSep.setForeground(new Color(0,102,204));
    }//GEN-LAST:event_AssetIDTxtMouseClicked

    private void FloorTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FloorTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FloorTxtActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        logout();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAsset().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAssetBtn;
    private javax.swing.JLabel AssetIDLbl;
    private javax.swing.JSeparator AssetIDSep;
    private javax.swing.JTextField AssetIDTxt;
    private javax.swing.JLabel AssetNameLbl;
    private javax.swing.JSeparator AssetNameSep;
    private javax.swing.JTextField AssetNameTxt;
    private javax.swing.JComboBox<String> AssetTypeCB;
    private javax.swing.JLabel AssetTypeLbl;
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JLabel ClockLbl;
    private javax.swing.JLabel FloorLbl;
    private javax.swing.JSeparator FloorSep;
    private javax.swing.JTextField FloorTxt;
    private javax.swing.JLabel HeadingLbl;
    private javax.swing.JLabel InvoiceNumLbl;
    private javax.swing.JSeparator InvoiceNumSep;
    private javax.swing.JTextField InvoiceNumberTxt;
    private javax.swing.JButton LogOutBtn;
    private javax.swing.JPanel MainCard;
    private javax.swing.JComboBox<String> MakeCB;
    private javax.swing.JLabel MakeLbl;
    private javax.swing.JLabel SerialNumLbl;
    private javax.swing.JSeparator SerialNumSep;
    private javax.swing.JTextField SerialNumTxt;
    // End of variables declaration//GEN-END:variables
}
